model ChatSession {
    id            String         @id @default(auto()) @map("_id") @db.ObjectId
    user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId        String         @unique @db.ObjectId
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    sessionName   String
    isActive      Boolean        @default(true)
    conversations Conversation[]
}

model Conversation {
    id            String      @id @default(auto()) @map("_id") @db.ObjectId
    chatSession   ChatSession @relation(fields: [chatSessionId], references: [id], onDelete: Cascade)
    chatSessionId String      @db.ObjectId
    title         String
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    prompts       Prompt[]
}

model Prompt {
    id             String       @id @default(auto()) @map("_id") @db.ObjectId
    conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
    conversationId String       @db.ObjectId
    role           String?
    question       String
    answer         String
    createdAt      DateTime     @default(now())
}
