// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  phoneNumber String  @unique
  email       String? @unique
  address     String
  password    String
  licence     Boolean @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@map("users")
}

model Product {
  id                   String             @id @default(auto()) @map("_id") @db.ObjectId
  pesonalInfo          User               @relation(fields: [pesonalInfoId], references: [id])
  pesonalInfoId        String             @db.ObjectId
  ProductInfo          ProductInfo        @relation(fields: [productInfoId], references: [id])
  productInfoId        String             @db.ObjectId
  locationInfo         locationInfo       @relation(fields: [locationInfoId], references: [id])
  locationInfoId       String             @db.ObjectId
  qualityMetrics       QualityMetrics     @relation(fields: [qualityMetricsId], references: [id])
  qualityMetricsId     String             @db.ObjectId
  harvestStorage       HarvestStorage     @relation(fields: [harvestStorageId], references: [id])
  harvestStorageId     String             @db.ObjectId
  media                Media              @relation(fields: [mediaId], references: [id])
  mediaId              String             @db.ObjectId
  additionalServices   AdditionalServices @relation(fields: [additionalServicesId], references: [id])
  additionalServicesId String             @db.ObjectId
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
}

model ProductInfo {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  cropName          String
  variety           String
  quantityAvailable String
  expectedPrice     Float
  isSold            Boolean   @default(false)
  Product           Product[]
}

model locationInfo {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  farmLocation String
  districtCity String
  state        String
  Product      Product[]
}

model QualityMetrics {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  moistureContent Float?
  grainSize       String?
  color           String
  purity          Float
  certifications  String?
  Product         Product[]
}

model HarvestStorage {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  harvestDate       DateTime
  storageConditions String
  storageLocation   String
  Product           Product[]
}

model Media {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  photos        String[]
  videos        String[]
  videoTourLink String?
  Product       Product[]
}

model AdditionalServices {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  sampleRequest Boolean   @default(false)
  liveStreaming Boolean   @default(false)
  Product       Product[]
}
